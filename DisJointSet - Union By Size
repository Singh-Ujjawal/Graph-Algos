class DisJointSet {
    public:
    vector<int> size;
    vector<int> parent;
    
    DisJointSet(int n) {
        size.resize(n+1,1);
        parent.resize(n+1);
        for(int i=0;i<=n;i++) parent[i] = i;
    }

    int findPar(int node) {
        if(node == parent[node]) return node;
        return parent[node] = findPar(parent[node]);
    }

    void unionBySize(int u,int v) {
        int ultParOfU = findPar(u);
        int ultParOfV = findPar(v);
        if(ultParOfU == ultParOfV) return ;
        if(size[ultParOfU] > size[ultParOfV]) {
            parent[ultParOfV] = ultParOfU;
            size[ultParOfU]+=size[ultParOfV];
        }
        else {
            parent[ultParOfU] = ultParOfV;
            size[ultParOfV]+=size[ultParOfU];
        }
    }
};
