//For finding negative cycle in Directed Graph.
class Solution {
  public:
    vector<int> bellmanFord(int n, vector<vector<int>>& edges, int src) {
        vector<int> dist(n,1e8);
        dist[src] = 0;
        for(int i=1;i<=n-1;i++) {
            for(auto it:edges) {
                if(dist[it[0]]!=1e8 and dist[it[1]] > dist[it[0]] + it[2]) {
                    dist[it[1]] = dist[it[0]] + it[2];
                }
            }
        }
        for(auto it:edges) {
            if(dist[it[0]]!=1e8 and dist[it[1]] > dist[it[0]] + it[2]) {
                return {-1}; // Negative Cycle Exist
            }
        }
        return dist; // Minimum distance from Source to every node.
    }
};
