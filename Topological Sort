class Solution {
  public:
    // Function to return list containing vertices in Topological order.
    // Also for detecting loop in Directed Graph 
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        // Your code here
        int v = adj.size();
        vector<int> inDeg(v,0);
        for(int i=0;i<adj.size();i++) {
            for(auto it:adj[i]) {
                inDeg[it]++;
            }
        }
        
        queue<int> q;
        for(int i=0;i<v;i++) {
            if(inDeg[i]==0) q.push(i);
        }
        
        vector<int> ans;
        while(!q.empty()) {
            int node = q.front();
            q.pop();
            ans.push_back(node);
            
            for(auto it:adj[node]) {
                inDeg[it]--;
                if(inDeg[it]==0) q.push(it);
            }
        }
        
        return ans;
    }
};
